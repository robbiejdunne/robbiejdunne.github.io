<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Posts on Robert Dunne</title>
		<link>https://robbiejdunne.github.io/posts/</link>
		<description>Recent content in Posts on Robert Dunne</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>en-us</language>
		<copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
		<lastBuildDate>Mon, 13 Jun 2022 14:26:16 +0200</lastBuildDate>
		<atom:link href="https://robbiejdunne.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>Indie Song Generator</title>
			<link>https://robbiejdunne.github.io/posts/projects/indie-song-generator/</link>
			<pubDate>Mon, 13 Jun 2022 14:26:16 +0200</pubDate>
			
			<guid>https://robbiejdunne.github.io/posts/projects/indie-song-generator/</guid>
			<description>I decided to pick my ten favourite musicians using Spotify&amp;rsquo;s developer tools, scrape the lyrics using Genius&amp;rsquo; API and then create a song using Markovify.
According to Spotify, my top ten bands of all time are.
So I used Python to scrape Genius and came back with a file.
Markovify is a library that. You can read more about it here&amp;hellip;</description>
			<content type="html"><![CDATA[<p>I decided to pick my ten favourite musicians using Spotify&rsquo;s developer tools, scrape the lyrics using Genius&rsquo; API and then create a song using Markovify.</p>
<p>According to Spotify, my top ten bands of all time are.</p>
<p>So I used Python to scrape Genius and came back with a file.</p>
<p>Markovify is a library that. You can read more about it here&hellip;</p>
]]></content>
		</item>
		
		<item>
			<title>Expected Passing</title>
			<link>https://robbiejdunne.github.io/posts/projects/expected-passing/</link>
			<pubDate>Tue, 28 Sep 2021 00:00:00 +0000</pubDate>
			
			<guid>https://robbiejdunne.github.io/posts/projects/expected-passing/</guid>
			<description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
			<content type="html"><![CDATA[<h2 id="introduction">Introduction</h2>
<p>This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&rsquo;t cover using CSS to style your theme.</p>
<p>We&rsquo;ll start with creating a new site with a very basic template. Then we&rsquo;ll add in a few pages and posts. With small variations on that, you will be able to create many different types of web sites.</p>
<p>In this tutorial, commands that you enter will start with the &ldquo;$&rdquo; prompt. The output will follow. Lines that start with &ldquo;#&rdquo; are comments that I&rsquo;ve added to explain a point. When I show updates to a file, the &ldquo;:wq&rdquo; on the last line means to save the file.</p>
]]></content>
		</item>
		
		<item>
			<title>Predicting the NFL Draft</title>
			<link>https://robbiejdunne.github.io/posts/projects/predicting-nfl-draft/</link>
			<pubDate>Tue, 28 Sep 2021 00:00:00 +0000</pubDate>
			
			<guid>https://robbiejdunne.github.io/posts/projects/predicting-nfl-draft/</guid>
			<description>Another project for college. I wanted to</description>
			<content type="html"><![CDATA[<p>Another project for college. I wanted to</p>
]]></content>
		</item>
		
		<item>
			<title>NFL Expected Rushing Yards</title>
			<link>https://robbiejdunne.github.io/posts/projects/expected-rushing-yards/</link>
			<pubDate>Sun, 13 Jun 2021 14:26:16 +0200</pubDate>
			
			<guid>https://robbiejdunne.github.io/posts/projects/expected-rushing-yards/</guid>
			<description>The nflverse is pretty amazing. So is Shiny, if not a little tricky to figure out. I decided to combine the two to create an Expected Rushing Yards model that would publish the results through Shiny.
The main goal of this project was to create a Shiny app with multiple pages and a navigation bar. Therefore, the model the rushing yards are predicted using is linear regression with rushing yards, down and seconds remaining in the half as the variables.</description>
			<content type="html"><![CDATA[<p>The nflverse is pretty amazing. So is Shiny, if not a little tricky to figure out. I decided to combine the two to create an Expected Rushing Yards model that would publish the results through Shiny.</p>
<p>The main goal of this project was to create a Shiny app with multiple pages and a navigation bar. Therefore, the model the rushing yards are predicted using is linear regression with rushing yards, down and seconds remaining in the half as the variables.</p>
<p>You can check out the code on <a href="https://github.com/robbiejdunne/xRushingYards">GitHub</a>.</p>
<p>You can also check out the Shiny App <a href="https://robbiejdunne.shinyapps.io/RushingYardsNFLfastR/">here</a>.</p>
<p><img src=".../static/ryoe.png" alt="image"></p>
<h3 id="future-work">Future work:</h3>
]]></content>
		</item>
		
	</channel>
</rss>
